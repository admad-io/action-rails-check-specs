#!/usr/bin/env ruby

# require "base64"
#

IGNORED_FILES = %r{
  factories|requests|system|support|_helper|routing|integration|external|views
}x.freeze

# TOKEN = ENV["GITHUB_TOKEN"]
# REPO = format("https://github.com/%s", ENV["GITHUB_REPOSITORY"])
# BRANCH = ENV["GITHUB_REF"]
# ACTOR = ENV["GITHUB_ACTOR"]
#
# BASIC_AUTH = Base64.encode64(
#   format("%s:%s", ENV.fetch("GITHUB_ACTOR"), ENV.fetch("GITHUB_TOKEN"))
# )
#
# %x[git -c http.extraheader="AUTHORIZATION: basic #{BASIC_AUTH}" clone #{REPO} /tmp/x]
# %x[cd /tmp/x/]
# %x[git checkout #{BRANCH}]
#
# puts %x[ls -la /tmp/x]
#
# puts "% git --version"
# puts %x[git --version]
# puts "% pwd"
# puts %x[pwd]
# puts "% ls -la"
# puts %x[ls -la]
# puts "% git branch"
# puts %x[git branch]
# puts "% git branch -l"
# puts %x[git branch -l]
# puts "% git diff master..."
# puts %x[git diff master...]

# %x[git diff --diff-filter=AM --name-only master... -- 'app/**/*.rb']

missing_specs =
  Dir["app/**/*.rb"]
    .map { _1.sub(/^app/, "spec") }
    .map { _1.sub(/\.rb$/, "_spec.rb") }
    .reject(&File.:exist?)
    .each { puts format("Missing spec file: %s", _1) }

missing_files =
  Dir["spec/**/*.rb"]
    .map { _1.sub(/^spec/, "app") }
    .map { _1.sub(/_spec\.rb$/, ".rb") }
    .reject { |x| x =~ IGNORED_FILES }
    .reject(&File.:exist?)
    .each { puts format("Missing file: %s", _1) }

exit(1) if missing_specs.any? || missing_files.any?
